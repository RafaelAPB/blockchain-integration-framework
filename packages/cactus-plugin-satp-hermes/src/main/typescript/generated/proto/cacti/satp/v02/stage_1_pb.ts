// @generated by protoc-gen-es v1.7.2 with parameter "target=ts"
// @generated from file cacti/satp/v02/stage_1.proto (package cacti.satp.v02, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { NetworkCapabilities, SATPMessage, TransferClaims, TransferClaimsFormat } from "./common/common_messages_pb.js";

/**
 * @generated from message cacti.satp.v02.TransferProposalRequest
 */
export class TransferProposalRequest extends Message<TransferProposalRequest> {
  /**
   * @generated from field: cacti.satp.v02.common.SATPMessage satp_message = 1;
   */
  satpMessage?: SATPMessage;

  /**
   * @generated from field: cacti.satp.v02.common.TransferClaims transfer_init_claims = 2;
   */
  transferInitClaims?: TransferClaims;

  /**
   * @generated from field: cacti.satp.v02.common.TransferClaimsFormat transfer_init_claims_format = 3;
   */
  transferInitClaimsFormat?: TransferClaimsFormat;

  /**
   * @generated from field: cacti.satp.v02.common.NetworkCapabilities network_capabilities = 4;
   */
  networkCapabilities?: NetworkCapabilities;

  /**
   * @generated from field: bool multiple_claims_allowed = 5;
   */
  multipleClaimsAllowed = false;

  /**
   * @generated from field: bool multiple_cancels_allowed = 6;
   */
  multipleCancelsAllowed = false;

  /**
   * @generated from field: string client_signature = 7;
   */
  clientSignature = "";

  constructor(data?: PartialMessage<TransferProposalRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cacti.satp.v02.TransferProposalRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "satp_message", kind: "message", T: SATPMessage },
    { no: 2, name: "transfer_init_claims", kind: "message", T: TransferClaims },
    { no: 3, name: "transfer_init_claims_format", kind: "message", T: TransferClaimsFormat },
    { no: 4, name: "network_capabilities", kind: "message", T: NetworkCapabilities },
    { no: 5, name: "multiple_claims_allowed", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "multiple_cancels_allowed", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 7, name: "client_signature", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransferProposalRequest {
    return new TransferProposalRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransferProposalRequest {
    return new TransferProposalRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransferProposalRequest {
    return new TransferProposalRequest().fromJsonString(jsonString, options);
  }

  static equals(a: TransferProposalRequest | PlainMessage<TransferProposalRequest> | undefined, b: TransferProposalRequest | PlainMessage<TransferProposalRequest> | undefined): boolean {
    return proto3.util.equals(TransferProposalRequest, a, b);
  }
}

/**
 * @generated from message cacti.satp.v02.TransferProposalReceiptMessage
 */
export class TransferProposalReceiptMessage extends Message<TransferProposalReceiptMessage> {
  /**
   * @generated from field: cacti.satp.v02.common.SATPMessage satp_message = 1;
   */
  satpMessage?: SATPMessage;

  /**
   * @generated from field: string hash_transfer_init_claims = 2;
   */
  hashTransferInitClaims = "";

  /**
   * @generated from field: string timestamp = 3;
   */
  timestamp = "";

  constructor(data?: PartialMessage<TransferProposalReceiptMessage>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cacti.satp.v02.TransferProposalReceiptMessage";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "satp_message", kind: "message", T: SATPMessage },
    { no: 2, name: "hash_transfer_init_claims", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "timestamp", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransferProposalReceiptMessage {
    return new TransferProposalReceiptMessage().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransferProposalReceiptMessage {
    return new TransferProposalReceiptMessage().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransferProposalReceiptMessage {
    return new TransferProposalReceiptMessage().fromJsonString(jsonString, options);
  }

  static equals(a: TransferProposalReceiptMessage | PlainMessage<TransferProposalReceiptMessage> | undefined, b: TransferProposalReceiptMessage | PlainMessage<TransferProposalReceiptMessage> | undefined): boolean {
    return proto3.util.equals(TransferProposalReceiptMessage, a, b);
  }
}

/**
 * @generated from message cacti.satp.v02.TransferProposalRejectMessage
 */
export class TransferProposalRejectMessage extends Message<TransferProposalRejectMessage> {
  /**
   * @generated from field: cacti.satp.v02.common.SATPMessage satp_message = 1;
   */
  satpMessage?: SATPMessage;

  /**
   * @generated from field: string hash_transfer_init_claims = 2;
   */
  hashTransferInitClaims = "";

  /**
   * @generated from field: cacti.satp.v02.common.TransferClaims transfer_counter_claims = 3;
   */
  transferCounterClaims?: TransferClaims;

  /**
   * @generated from field: string timestamp = 4;
   */
  timestamp = "";

  constructor(data?: PartialMessage<TransferProposalRejectMessage>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cacti.satp.v02.TransferProposalRejectMessage";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "satp_message", kind: "message", T: SATPMessage },
    { no: 2, name: "hash_transfer_init_claims", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "transfer_counter_claims", kind: "message", T: TransferClaims },
    { no: 4, name: "timestamp", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransferProposalRejectMessage {
    return new TransferProposalRejectMessage().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransferProposalRejectMessage {
    return new TransferProposalRejectMessage().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransferProposalRejectMessage {
    return new TransferProposalRejectMessage().fromJsonString(jsonString, options);
  }

  static equals(a: TransferProposalRejectMessage | PlainMessage<TransferProposalRejectMessage> | undefined, b: TransferProposalRejectMessage | PlainMessage<TransferProposalRejectMessage> | undefined): boolean {
    return proto3.util.equals(TransferProposalRejectMessage, a, b);
  }
}

/**
 * @generated from message cacti.satp.v02.TransferProposalResponse
 */
export class TransferProposalResponse extends Message<TransferProposalResponse> {
  /**
   * @generated from oneof cacti.satp.v02.TransferProposalResponse.response
   */
  response: {
    /**
     * @generated from field: cacti.satp.v02.TransferProposalReceiptMessage receipt = 1;
     */
    value: TransferProposalReceiptMessage;
    case: "receipt";
  } | {
    /**
     * @generated from field: cacti.satp.v02.TransferProposalRejectMessage reject = 2;
     */
    value: TransferProposalRejectMessage;
    case: "reject";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<TransferProposalResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cacti.satp.v02.TransferProposalResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "receipt", kind: "message", T: TransferProposalReceiptMessage, oneof: "response" },
    { no: 2, name: "reject", kind: "message", T: TransferProposalRejectMessage, oneof: "response" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransferProposalResponse {
    return new TransferProposalResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransferProposalResponse {
    return new TransferProposalResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransferProposalResponse {
    return new TransferProposalResponse().fromJsonString(jsonString, options);
  }

  static equals(a: TransferProposalResponse | PlainMessage<TransferProposalResponse> | undefined, b: TransferProposalResponse | PlainMessage<TransferProposalResponse> | undefined): boolean {
    return proto3.util.equals(TransferProposalResponse, a, b);
  }
}

/**
 * @generated from message cacti.satp.v02.TransferCommenceRequest
 */
export class TransferCommenceRequest extends Message<TransferCommenceRequest> {
  /**
   * @generated from field: cacti.satp.v02.common.SATPMessage satp_message = 1;
   */
  satpMessage?: SATPMessage;

  /**
   * @generated from field: string hash_transfer_init_claims = 2;
   */
  hashTransferInitClaims = "";

  /**
   * @generated from field: string client_transfer_number = 3;
   */
  clientTransferNumber = "";

  /**
   * @generated from field: string client_signature = 4;
   */
  clientSignature = "";

  constructor(data?: PartialMessage<TransferCommenceRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cacti.satp.v02.TransferCommenceRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "satp_message", kind: "message", T: SATPMessage },
    { no: 2, name: "hash_transfer_init_claims", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "client_transfer_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "client_signature", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransferCommenceRequest {
    return new TransferCommenceRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransferCommenceRequest {
    return new TransferCommenceRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransferCommenceRequest {
    return new TransferCommenceRequest().fromJsonString(jsonString, options);
  }

  static equals(a: TransferCommenceRequest | PlainMessage<TransferCommenceRequest> | undefined, b: TransferCommenceRequest | PlainMessage<TransferCommenceRequest> | undefined): boolean {
    return proto3.util.equals(TransferCommenceRequest, a, b);
  }
}

/**
 * @generated from message cacti.satp.v02.CommenceResponseMessage
 */
export class CommenceResponseMessage extends Message<CommenceResponseMessage> {
  /**
   * @generated from field: cacti.satp.v02.common.SATPMessage satp_message = 1;
   */
  satpMessage?: SATPMessage;

  /**
   * @generated from field: string server_signature = 2;
   */
  serverSignature = "";

  constructor(data?: PartialMessage<CommenceResponseMessage>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cacti.satp.v02.CommenceResponseMessage";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "satp_message", kind: "message", T: SATPMessage },
    { no: 2, name: "server_signature", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CommenceResponseMessage {
    return new CommenceResponseMessage().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CommenceResponseMessage {
    return new CommenceResponseMessage().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CommenceResponseMessage {
    return new CommenceResponseMessage().fromJsonString(jsonString, options);
  }

  static equals(a: CommenceResponseMessage | PlainMessage<CommenceResponseMessage> | undefined, b: CommenceResponseMessage | PlainMessage<CommenceResponseMessage> | undefined): boolean {
    return proto3.util.equals(CommenceResponseMessage, a, b);
  }
}

