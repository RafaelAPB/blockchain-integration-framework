
syntax = "proto3";
package cacti.satp.v02;

import "cacti/satp/v02/common/common_messages.proto";

message TransferProposalRequest {
  cacti.satp.v02.common.SATPMessage satp_message = 1;
  cacti.satp.v02.common.TransferClaims transfer_init_claims = 2;
  cacti.satp.v02.common.TransferClaimsFormat transfer_init_claims_format = 3;
  cacti.satp.v02.common.NetworkCapabilities network_capabilities = 4;
  bool multiple_claims_allowed = 5;
  bool multiple_cancels_allowed = 6;
  string client_signature = 7;
}

message TransferProposalReceiptMessage {
  cacti.satp.v02.common.SATPMessage satp_message = 1;
  string hash_transfer_init_claims = 2;
  string timestamp = 3;
}

message TransferProposalRejectMessage {
  cacti.satp.v02.common.SATPMessage satp_message = 1;
  string hash_transfer_init_claims = 2;
  cacti.satp.v02.common.TransferClaims transfer_counter_claims = 3;
  string timestamp = 4;
}

message TransferProposalResponse {
  oneof response {
    TransferProposalReceiptMessage receipt = 1;
    TransferProposalRejectMessage reject = 2;
  }
}

message TransferCommenceRequest {
  cacti.satp.v02.common.SATPMessage satp_message = 1;
  string hash_transfer_init_claims = 2;
  string client_transfer_number = 3;
  string client_signature = 4;
}

message CommenceResponseMessage {
  cacti.satp.v02.common.SATPMessage satp_message = 1;
  string server_signature = 2;
}
  
service SatpStage1Service {
  // util RPCs
 
  // step RPCs
  rpc TransferProposal(TransferProposalRequest) returns (TransferProposalResponse) {}
  rpc TransferCommence(TransferCommenceRequest) returns (CommenceResponseMessage) {}
}
